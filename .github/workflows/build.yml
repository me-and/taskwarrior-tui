name: Build
on: push
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            rust_flags: ''
            features: ''
            binary_postfix: ''
            upx_args: --best --lzma
            strip: true
    env:
      RUSTFLAGS: ${{ matrix.rust_flags }}
      MACOSX_DEPLOYMENT_TARGET: 10.7
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          default: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release ${{matrix.features}} --target=${{ matrix.target }}
      - name: Compress binaries
        uses: svenstaro/upx-action@v2
        with:
          file: target/${{ matrix.target }}/release/taskwarrior-tui${{ matrix.binary_postfix }}
          args: ${{ matrix.upx_args }}
          strip: ${{ matrix.strip }}
      - name: Packaging binary
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          tar czvf taskwarrior-tui-${{ matrix.target }}.tar.gz taskwarrior-tui${{ matrix.binary_postfix }}
          if [[ ${{ runner.os }} == 'Windows' ]]; then
            certutil -hashfile taskwarrior-tui-${{ matrix.target }}.tar.gz sha256 | grep -E [A-Fa-f0-9]{64} > taskwarrior-tui-${{ matrix.target }}.sha256
          else
            shasum -a 256 taskwarrior-tui-${{ matrix.target }}.tar.gz > taskwarrior-tui-${{ matrix.target }}.sha256
          fi
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: taskwarrior-tui
          path: target/${{ matrix.target }}/release/taskwarrior-tui-${{ matrix.target }}.tar.gz
